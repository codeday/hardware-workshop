//#--------------------------------------------------------------------------------------#
//| Thanks to Digikey for providing the kits and helping us make this an amazing CodeDay!|
//#--------------------------------------------------------------------------------------#
#include <U8g2lib.h> //Library for the screen
#include <Wire.h> //For I2C (How the display and board talk to each other)
#include <Arduino.h> //required for screen, idk what rn

static const unsigned char owo1_bits[] PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
   0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x41, 0x00, 0x00,
   0x00, 0x00, 0x41, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00,
   0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x88, 0x08, 0x3e, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x88, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48,
   0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x50, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
   0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x02, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };
static const unsigned char owo2_bits[] PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x1e, 0x00, 0x00,
   0x00, 0xc0, 0x30, 0x00, 0x80, 0x61, 0x00, 0x00, 0x00, 0x20, 0x4f, 0x00,
   0x40, 0x9e, 0x00, 0x00, 0x00, 0x90, 0x99, 0x00, 0x20, 0x33, 0x01, 0x00,
   0x00, 0x88, 0x90, 0x00, 0x10, 0x21, 0x01, 0x00, 0x00, 0x88, 0x10, 0x45,
   0x14, 0x21, 0x02, 0x00, 0x00, 0x88, 0x10, 0x45, 0x14, 0x21, 0x02, 0x00,
   0x00, 0x88, 0x10, 0xa5, 0x14, 0x21, 0x02, 0x00, 0x00, 0x88, 0x10, 0xa9,
   0x12, 0x21, 0x02, 0x00, 0x00, 0x88, 0x99, 0xa8, 0x12, 0x33, 0x01, 0x00,
   0x00, 0x10, 0x8f, 0x10, 0x21, 0x1e, 0x01, 0x00, 0x00, 0x20, 0x46, 0x10,
   0x41, 0x8c, 0x00, 0x00, 0x00, 0x40, 0x20, 0x00, 0x80, 0x40, 0x00, 0x00,
   0x00, 0x80, 0x1f, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };
static const unsigned char owo3_bits[] PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xb8, 0x8b, 0xe8, 0x0e, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x8b,
   0xe8, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x8b, 0xe8, 0x0f, 0x00, 0x00,
   0x00, 0x00, 0xf0, 0x89, 0xc8, 0x07, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x50,
   0x85, 0x03, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x02, 0x01, 0x00, 0x00,
   0x00, 0x00, 0x40, 0x20, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
   0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00 };
//Board pin numbers and other variables
char led = 4;
char buzzer = 5;
bool hatched = false; //to store if the egg has hatched
int millis_since_press = 0;
char button = 6;
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE); 

void drawSmallEgg(){
  u8g2.clearBuffer(); //Clears the screen
  u8g2.drawCircle(63,31,20); //sad excuse for an egg but works
  u8g2.sendBuffer(); //Sends image to the screen
  delay(750);
}
void drawBigEgg() {
  u8g2.clearBuffer(); //Clears the screen
  u8g2.drawCircle(63,31,15); //sad excuse for an egg but works
  u8g2.sendBuffer(); //Sends image to screen
  delay(750);
}
void drawOwO1(void) {
  u8g2.drawXBMP(32,16,64,32, owo1_bits);
}
void drawOwO2(void) {
  u8g2.drawXBMP(32,16,64,32, owo2_bits);
}
void drawOwO3(void) {
  u8g2.drawXBMP(32,16,64,32, owo3_bits);
}
void setup() {
  u8g2.begin(); //Tells the screen to start
  u8g2.clearBuffer(); //Clears the screen
  u8g2.setFont(u8g2_font_ncenB08_tr); //Sets the font the screen uses
  while (digitalRead(button) == LOW) {
    u8g2.clearBuffer(); //Clears the screen
    u8g2.drawStr(30,20,"JojiGotchi"); //Title screen
    u8g2.drawStr(25,45,"Press Any Button");
    u8g2.sendBuffer();
  }
  millis_since_press = millis();
  while (millis() - millis_since_press <= 300000) { //checks if hatching time is less than 5 mins, if its more than 5 the loop ends and the Jojigotchi hatches
    drawSmallEgg();
    drawBigEgg();
  }
}

void loop(void) {
  //Shows different OwO faces every 10s
  u8g2.firstPage();
  do {
    drawOwO1();
  } while(u8g2.nextPage());
  delay(10000);
  u8g2.firstPage();
  do {
    drawOwO2();
  } while(u8g2.nextPage());
  delay(10000);
  u8g2.firstPage();
  do {
    drawOwO3();
  } while(u8g2.nextPage());
  delay(10000);
}
